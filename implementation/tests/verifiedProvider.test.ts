// TODO: currently its just a demo script, make it a test 
import * as dotenv from 'dotenv';
dotenv.config();

import Web3 from 'web3';
import * as ethers from 'ethers';
import { VerifiedProvider } from '../src/rpc-proxy/verifiedProvider';
import abi from './abi-uni3.json';
import testRPCCalls from './testRPCCalls.json';

const RPC_URL = process.env.RPC_URL || '';
// const RPC_URL = 'http://127.0.0.1:8545';
// const RPC_URL = 'http://localhost:80/rpc/v3/22ace803f31c4fcda1f212083e660474';

// const Tx = {
//   from: '0x369E32aed1Dc5c33C85ab20977fB645A803E4A70',
//   to: '0x1f98415757620b543a52e61c46b32eb19261f984',
//   data: '0x1749e1e30000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000044000000000000000000000000000000000000000000000000000000000000005a00000000000000000000000000000000000000000000000000000000000000700000000000000000000000000000000000000000000000000000000000000086000000000000000000000000000000000000000000000000000000000000009c00000000000000000000000000000000000000000000000000000000000000b200000000000000000000000000000000000000000000000000000000000000c800000000000000000000000000000000000000000000000000000000000000de00000000000000000000000000000000000000000000000000000000000000f4000000000000000000000000000000000000000000000000000000000000010a0000000000000000000000000b27308f9f90d607463bb33ea1bebb41c27ce5ab600000000000000000000000000000000000000000000000000000000001e8480000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c4cdca175300000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000005f5e10000000000000000000000000000000000000000000000000000000000000000422260fac5e5542a773aa44fbcfedf7c193bc2c5990001f4a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000bb8c944e90c64b2c07662a292be6244bdf05cda44a700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b27308f9f90d607463bb33ea1bebb41c27ce5ab600000000000000000000000000000000000000000000000000000000001e8480000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c4cdca175300000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000005f5e10000000000000000000000000000000000000000000000000000000000000000422260fac5e5542a773aa44fbcfedf7c193bc2c5990001f4c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000bb8c944e90c64b2c07662a292be6244bdf05cda44a700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b27308f9f90d607463bb33ea1bebb41c27ce5ab600000000000000000000000000000000000000000000000000000000001e8480000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c4cdca175300000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000005f5e10000000000000000000000000000000000000000000000000000000000000000422260fac5e5542a773aa44fbcfedf7c193bc2c5990001f4c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2002710c944e90c64b2c07662a292be6244bdf05cda44a700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b27308f9f90d607463bb33ea1bebb41c27ce5ab600000000000000000000000000000000000000000000000000000000001e8480000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c4cdca175300000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000005f5e10000000000000000000000000000000000000000000000000000000000000000422260fac5e5542a773aa44fbcfedf7c193bc2c5990001f4dac17f958d2ee523a2206206994597c13d831ec7002710c944e90c64b2c07662a292be6244bdf05cda44a700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b27308f9f90d607463bb33ea1bebb41c27ce5ab600000000000000000000000000000000000000000000000000000000001e8480000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c4cdca175300000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000005f5e10000000000000000000000000000000000000000000000000000000000000000422260fac5e5542a773aa44fbcfedf7c193bc2c599000bb8a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000bb8c944e90c64b2c07662a292be6244bdf05cda44a700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b27308f9f90d607463bb33ea1bebb41c27ce5ab600000000000000000000000000000000000000000000000000000000001e8480000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c4cdca175300000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000005f5e10000000000000000000000000000000000000000000000000000000000000000422260fac5e5542a773aa44fbcfedf7c193bc2c599000bb8c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000bb8c944e90c64b2c07662a292be6244bdf05cda44a700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b27308f9f90d607463bb33ea1bebb41c27ce5ab600000000000000000000000000000000000000000000000000000000001e8480000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c4cdca175300000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000005f5e10000000000000000000000000000000000000000000000000000000000000000422260fac5e5542a773aa44fbcfedf7c193bc2c599000bb8c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2002710c944e90c64b2c07662a292be6244bdf05cda44a700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b27308f9f90d607463bb33ea1bebb41c27ce5ab600000000000000000000000000000000000000000000000000000000001e8480000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c4cdca175300000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000005f5e10000000000000000000000000000000000000000000000000000000000000000422260fac5e5542a773aa44fbcfedf7c193bc2c599000bb8dac17f958d2ee523a2206206994597c13d831ec7002710c944e90c64b2c07662a292be6244bdf05cda44a700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b27308f9f90d607463bb33ea1bebb41c27ce5ab600000000000000000000000000000000000000000000000000000000001e8480000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c4cdca175300000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000005f5e10000000000000000000000000000000000000000000000000000000000000000422260fac5e5542a773aa44fbcfedf7c193bc2c599002710a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000bb8c944e90c64b2c07662a292be6244bdf05cda44a700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b27308f9f90d607463bb33ea1bebb41c27ce5ab600000000000000000000000000000000000000000000000000000000001e8480000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c4cdca175300000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000005f5e10000000000000000000000000000000000000000000000000000000000000000422260fac5e5542a773aa44fbcfedf7c193bc2c599002710c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000bb8c944e90c64b2c07662a292be6244bdf05cda44a700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b27308f9f90d607463bb33ea1bebb41c27ce5ab600000000000000000000000000000000000000000000000000000000001e8480000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c4cdca175300000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000005f5e10000000000000000000000000000000000000000000000000000000000000000422260fac5e5542a773aa44fbcfedf7c193bc2c599002710c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2002710c944e90c64b2c07662a292be6244bdf05cda44a700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b27308f9f90d607463bb33ea1bebb41c27ce5ab600000000000000000000000000000000000000000000000000000000001e8480000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c4cdca175300000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000005f5e10000000000000000000000000000000000000000000000000000000000000000422260fac5e5542a773aa44fbcfedf7c193bc2c599002710dac17f958d2ee523a2206206994597c13d831ec7002710c944e90c64b2c07662a292be6244bdf05cda44a700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
//   gas: '0xfffffffffffff',
//   gasPrice: '0x0'
// }
// const Tx = {
//   from: '0x369E32aed1Dc5c33C85ab20977fB645A803E4A70',
//   to: '0xb27308f9f90d607463bb33ea1bebb41c27ce5ab6',
//   gas: '0x1e8480',
//   data: '0xcdca175300000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000005f5e10000000000000000000000000000000000000000000000000000000000000000422260fac5e5542a773aa44fbcfedf7c193bc2c5990001f4a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000bb8c944e90c64b2c07662a292be6244bdf05cda44a7000000000000000000000000000000000000000000000000000000000000'
// };

// const Tx = {
//   from: '0x369E32aed1Dc5c33C85ab20977fB645A803E4A70',
//   to: '0xb27308f9f90d607463bb33ea1bebb41c27ce5ab6',
//   gas: '0x1e8480',
//   data: '0xf7729d43000000000000000000000000c011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000000000000000000000000000000000000000000bb80000000000000000000000000000000000000000000000008ac7230489e800000000000000000000000000000000000000000000000000000000000000000000'
// }
// const Tx = {
//   from: '0x369E32aed1Dc5c33C85ab20977fB645A803E4A70',
//   to: '0x9a772018fbd77fcd2d25657e5c547baff3fd7d16',
//   gas: '0x1e8480',
//   data: '0x3850c7bd'
// }
// const Tx = {
//   to: '0x5e227AD1969Ea493B43F840cfF78d08a6fc17796',
//   data: '0x252dba42000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000cafe001067cdef266afb7eb5a286dcfd277f3de50000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000002470a08231000000000000000000000000369e32aed1dc5c33c85ab20977fb645a803e4a7000000000000000000000000000000000000000000000000000000000',
//   gas: '0xfffffffffffff',
//   gasPrice: '0x0'
// }

const blockTag = 'latest';

async function main() {
  const provider = new VerifiedProvider(RPC_URL);
  const web3 = new Web3(RPC_URL);
  const conract = new ethers.utils.Interface(abi); 
  for(let testRPCCall of testRPCCalls.reverse()) {
    try {
      if(testRPCCall.method !== 'eth_call')
        continue;

      const Tx = {
        to: (testRPCCall.params[0] as any).to,
        data: (testRPCCall.params[0] as any).data,
        gasPrice: '0x0'
      };
      const expectedRes = await web3.eth.call(Tx, blockTag);
      console.log(expectedRes.slice(0, 50));
      const res = await provider.call(Tx, blockTag);
      console.log(res.slice(0, 50));
      // const decodedResult = conract.decodeFunctionResult('quoteExactInput', res);
      // console.log(decodedResult);
      console.log(expectedRes === res);
      if(expectedRes !== res)
        console.log(testRPCCall);
    } catch(e) {
      console.log(testRPCCall);
      console.error(e);
    }
  }
}

main();
